/* please grade...
 * kept getting error during commit process: 
 *    fatal: cannot do a partial commit during merge.....tried fixing it but apparently I don't know how....
 * had originally done it on putty, then tried on a different ssh client and still couldn't get it to work 
 * however, this is part 1 of my assignment8. 
 */

/* This program is used to take in the file 4HKD.pdb and match up
 * using comparisons to the current scanned word to the key word
 * (ATOM or HETATM), if so then add to the corresponding counter.
 * Then print the results found.
 *
 * I noticed compiling differences but I compiled using
 * gcc -o newfile counting.c
 * then running it with    ./newfile  ../4HKD.pdb
 * and it ran correctly.
*/
#include<stdio.h>
#include<string.h>

int main(int argc, char** argv) {

        FILE *p;                //geting the file
        char fileline[750];     //creating line buffer
        int num = 0;
        int num2 = 0;           //counters
        p = fopen(argv[1] , "r");       //reading
/*
        scanf("%s" , word);
        printf("%s\n", word);
*/
        while( fgets(fileline, sizeof(fileline), p) != NULL)  {
                fscanf(p, "%s", fileline);              //scan line

                if(strcmp(fileline, "ATOM") == 0) {     //if line equals word
                num++;
                }
                if(strcmp(fileline, "HETATM") == 0) {
                num2++;
                }
        }

        fclose(p);
        printf("We found the word ATOM in the 4HKD.pdb file %d of times" ,  num);
        printf("\nWe found the word HETATM in the 4HKD.pdb file %d of times\n",  num2);
        return(0);
}

/*      while(!feof(p)) {
        }
*/










/* This is Part 2 attempt 
 * This program is used to first take in the 4HKD.pdb file
 * then scan in the current line and match up to corresponding fields (ATOM and HETATM)
 * because noticed those are only labels with ca(s) in them. There is an array created
 * to store these positions to later be used in the subtraction (of values in those  indexes)
 * It would then need to complete the subtraction for distances, and then close out the file.
 */
#include<stdio.h>



int main(int argc, char** argv)  {

        FILE *p;
        char cafile[750];
        int resarray[25] = {0};
        int x,y,z;
        int residue = 0;



        p = fopen(argv[1] , "r");
        while( fgets(cafile, sizeof(cafile), p) != NULL)  {  //get line
                fscanf(p, "%s", fileline);              //scan current line

                if((strcmp(fileline, "ATOM") == 0) || (strcmp(fileline, "HETATM") == 0)) {     //the ca(s) are located in these labels
                if(strcmp(fileline, "CA") == 0)  {      //if read ca then continue
                        resarray[i] += 1;               //adding to position
                        resarray[i] = residue;          //make current number as a residue number to be used
                //not sure how to go about getting the distance from here
                //if you are correctly placed at the residue position
                //then it would need to subtract the position from the other position
                //not sure how to incorporate x,y,z fields, and why needed for distance
                }
                }
        }


        fclose(p);
        return(0);
}






